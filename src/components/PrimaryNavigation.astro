---
// Component imports
import NavItems from "./NavItems.astro"

// Library imports
import { Icon } from "astro-icon/components"
---

<nav class="primary-nav">
  <span id="primary-nav__label" hidden>Navigation</span>
  <button
    id="btnOpen"
    class="primary-nav__open"
    aria-expanded="false"
    aria-labelledby="primary-nav__label"
  >
    <Icon name="icon-hamburger" width={24} height={16} />
  </button>
  <div
    class="primary-nav__menu"
    role="dialog"
    aria-labelledby="primary-nav__label"
  >
    <button id="btnClose" class="primary-nav__close" aria-label="Close">
      <Icon name="icon-close" width={20} height={20} />
    </button>
    <ul class="primary-nav__list" data-open="false">
      <NavItems />
    </ul>
  </div>
</nav>

<style lang="scss">
  @use "../sass/abstracts" as *;

  .primary-nav {
    &__list {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    button {
      display: grid;
      place-items: center;
      background: none;
      border: none;

      @include mq(medium) {
        display: none;
      }
    }

    &__open[aria-expanded="true"] + .primary-nav__menu {
      translate: 0;
    }

    &__close {
      display: block;
      margin-inline-start: auto;
    }
  }

  // Mobile
  @include mq(medium, max) {
    .primary-nav {
      &__menu {
        position: fixed;
        inset: 0;
        background-color: $color-neutral-1000;
        padding: 2.5rem $container-min-margin-inline-small-screens;
        translate: 100vw 0;
        transition: translate 0.5s ease-in-out;
      }

      &__list {
        flex-direction: column;
        gap: 1.5rem;
        font-family: $font-family-accent;
        font-size: $font-size-600;
        text-transform: uppercase;
        padding-top: 8rem;
      }
    }
  }
</style>

<script>
  // Import body-scroll-lock
  import { disableBodyScroll, enableBodyScroll } from "body-scroll-lock"

  // Variables
  const btnOpen = document.querySelector("#btnOpen")! as HTMLButtonElement
  const btnClose = document.querySelector("#btnClose")! as HTMLButtonElement
  const primaryNavMenu = document.querySelector(
    ".primary-nav__menu"
  )! as HTMLElement
  const main = document.querySelector("main")!
  const body = document.querySelector("body")!
  const media = window.matchMedia("(width < 45em)")
  const isMobile = media.matches

  // Functions
  function setupPrimaryNav(isMobile: boolean) {
    if (isMobile) {
      // is mobile
      primaryNavMenu.setAttribute("inert", "")
      primaryNavMenu.style.transition = "none"
    } else {
      // is tablet/desktop
      primaryNavMenu.removeAttribute("inert")
    }
  }

  function openMobileMenu() {
    btnOpen.setAttribute("aria-expanded", "true")
    primaryNavMenu.removeAttribute("inert")
    primaryNavMenu.removeAttribute("style")
    main.setAttribute("inert", "")
    disableBodyScroll(body)
    btnClose.focus()
  }
  function closeMobileMenu() {
    btnOpen.setAttribute("aria-expanded", "false")
    primaryNavMenu.setAttribute("inert", "")
    main.removeAttribute("inert")
    enableBodyScroll(body)
    btnOpen.focus()

    setTimeout(() => {
      primaryNavMenu.style.transition = "none"
    }, 500)
  }

  setupPrimaryNav(isMobile)

  // EventListeners
  btnOpen.addEventListener("click", openMobileMenu)
  btnClose.addEventListener("click", closeMobileMenu)
  media.addEventListener("change", (e) => {
    setupPrimaryNav(e.matches)
  })
</script>
